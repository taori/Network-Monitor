<UserControl x:Class="NetworkMonitor.Application.Views.Controls.TransmitterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:framework="http://schemas.localcontrols.com/winfx/2006/xaml/presentation"
             xmlns:controls="clr-namespace:NetworkMonitor.ViewModels.Controls;assembly=NetworkMonitor.ViewModels"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:markup="clr-namespace:NetworkMonitor.Framework.Mvvm.Markup;assembly=NetworkMonitor.Framework.Mvvm"
             xmlns:enums="clr-namespace:NetworkMonitor.Models.Enums;assembly=NetworkMonitor.Models"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:helpers="clr-namespace:NetworkMonitor.Framework.Controls.Helpers;assembly=NetworkMonitor.Framework.Controls"
             xmlns:common="clr-namespace:NetworkMonitor.ViewModels.Common;assembly=NetworkMonitor.ViewModels"
             xmlns:dependencies="clr-namespace:NetworkMonitor.Application.Dependencies"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance controls:TransmitterViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*" />
			<ColumnDefinition Width="3*" />
		</Grid.ColumnDefinitions>
		<framework:ToolbarPanel Style="{StaticResource DefaultToolbarPanelStyle}" Grid.ColumnSpan="2" Grid.Row="0" Grid.Column="0">
			<Button Content="Save" Command="{Binding Path=SaveCommand}"/>
			<Button Content="{Binding Path=ToggleMessage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Path=ToggleCommand}"/>
			<Button Content="Clear log" Command="{Binding Path=ClearLogCommand}"/>
			<Button Content="Close" Command="{Binding Path=TabCloseCommand}"/>
		</framework:ToolbarPanel>
		<framework:ContentPanel Grid.Row="1" Grid.Column="0">
			<ScrollViewer 
				VerticalScrollBarVisibility="Auto" 
				HorizontalScrollBarVisibility="Hidden">
				<StackPanel
					helpers:PanelHelper.ChildMargin="0,0,0,10" >
					<TextBox mah:TextBoxHelper.Watermark="Display name:" 
					         Text="{Binding Path=DisplayName, UpdateSourceTrigger=PropertyChanged}" />
					<ComboBox ItemsSource="{Binding Source={markup:EnumSource {x:Type enums:TransmitterType}}}" 
					          SelectedValuePath="Value"
					          DisplayMemberPath="Description"
					          SelectedValue="{Binding Path=TransmitterType, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
					<TextBox mah:TextBoxHelper.Watermark="Port number:" 
					         Text="{Binding Path=PortNumber, UpdateSourceTrigger=PropertyChanged}" />
					<CheckBox Content="Broadcast" IsChecked="{Binding Path=Broadcast, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
					<TextBox mah:TextBoxHelper.Watermark="IpAddress:" 
							 IsReadOnly="{Binding Path=Broadcast}"
							 Visibility="{Binding Path=Broadcast, Converter={StaticResource BooleanToVisibilityInversedConverter}}">
						<TextBox.Text>
							<Binding Path="IpAddress" UpdateSourceTrigger="PropertyChanged">
								<Binding.ValidationRules>
									<dependencies:IpValidator></dependencies:IpValidator>
								</Binding.ValidationRules>
							</Binding>
						</TextBox.Text>
					</TextBox>
				</StackPanel>
			</ScrollViewer>
		</framework:ContentPanel>
		<framework:ContentPanel  Grid.Row="1" Grid.Column="1">
			<DockPanel>
				<TextBox mah:TextBoxHelper.Watermark="Message: (Press enter to send)" 
						 DockPanel.Dock="Top"
						 Margin="0,0,0,8"
						 ToolTip="Press enter to send"
						 Text="{Binding Path=NewMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
					<TextBox.InputBindings>
						<KeyBinding Key="Enter" Command="{Binding Path=NewMessageCommand}"></KeyBinding>
					</TextBox.InputBindings>
				</TextBox>

				<ListView ItemsSource="{Binding Path=Messages}">
					<ListView.Resources>
						<DataTemplate DataType="{x:Type common:NetworkContentMessage}">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding Path=DateTime, StringFormat={StaticResource DateFormat}}"/>
								<Image Source="{iconPacks:MaterialImage InformationOutline, Brush=Black}" Margin="4,0" />
								<TextBlock Text="{Binding Path=Message}"/>
							</StackPanel>
						</DataTemplate>

						<DataTemplate DataType="{x:Type common:NetworkStatusMessage}">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding Path=DateTime, StringFormat={StaticResource DateFormat}}"/>
								<Image Source="{Binding Path=Type, Converter={dependencies:NetworkStatusMessageTypeIcon}}" Margin="4,0" />
								<TextBlock Text="{Binding Path=Message}"/>
							</StackPanel>
						</DataTemplate>
					</ListView.Resources>
				</ListView>
			</DockPanel>
		</framework:ContentPanel>
	</Grid>
</UserControl>
